const puppeteer = require("puppeteer");

parseAliExpress(
  "https://www.aliexpress.com/item/1005001782713617.html#nav-specification"
);

async function parseAliExpress(url) {
  browser = await puppeteer.launch({
    headless: true,
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  });
  const page = await browser.newPage();
  const sleep = (ms) => new Promise((r) => setTimeout(r, ms));

  page.on("console", async (msg) => {
    const args = await Promise.all(
      msg.args().map((arg) => arg.jsonValue().catch(() => undefined))
    );
    console.log("üìú [PAGE LOG]:", ...args);
  });

  try {
    // 1. –ú–ê–°–ö–£–Ñ–ú–û–°–Ø –ü–Ü–î –ó–í–ò–ß–ê–ô–ù–ò–ô –ë–†–ê–£–ó–ï–†
    await page.setUserAgent(
      "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    );
    await page.setViewport({ width: 1920, height: 1080 });

    // 2. –î–û–î–ê–Ñ–ú–û –í–ò–ü–ê–î–ö–û–í–Ü –ó–ê–¢–†–ò–ú–ö–ò
    await sleep(Math.random() * 5000 + 3000);

    console.log(`üîó –°–ø—Ä–æ–±–∞ –ø–∞—Ä—Å–∏–Ω–≥—É: ${url}`);

    // 3. –ü–ï–†–ï–•–û–î–ò–ú–û –ù–ê –°–¢–û–†–Ü–ù–ö–£
    const response = await page.goto(url, {
      waitUntil: "domcontentloaded",
      timeout: 60000,
    });

    //await page.waitForSelector('title', { timeout: 30000 });

    // 4. –ü–ï–†–ï–í–Ü–†–Ø–Ñ–ú–û –ß–ò –ù–ï –ó–ê–ë–õ–û–ö–û–í–ê–ù–û
    if (!response || response.status() !== 200) {
      console.log("‚ùå –°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å");
      await page.close();
      return null;
    }

    // 5. –ü–ï–†–ï–í–Ü–†–Ø–Ñ–ú–û URL (—á–∏ –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è)
    const currentUrl = page.url();
    if (
      currentUrl.includes("security") ||
      currentUrl.includes("verify") ||
      currentUrl.includes("block")
    ) {
      console.log("‚ùå AliExpress –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –¥–æ—Å—Ç—É–ø");
      await page.close();
      return null;
    }

    // 6. –ß–ï–ö–ê–Ñ–ú–û –î–û–î–ê–¢–ö–û–í–û–ô –ß–ê–°
    await sleep(3000);

    // 7. –°–ü–†–û–ë–£–Ñ–ú–û –†–Ü–ó–ù–Ü –ú–ï–¢–û–î–ò –ü–û–®–£–ö–£ –¶–Ü–ù–ò
    const aliData = await page.evaluate(() => {
      console.log("üîç –ü–æ—á–∞—Ç–æ–∫ –ø–æ—à—É–∫—É —Ü—ñ–Ω–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ...");

      // –ú–ï–¢–û–î 1: –ü–æ—à—É–∫ –∑–∞ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
      const priceSelectors = [
        // –ù–æ–≤—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏ AliExpress
        ".price-default--current--F8OlYIo",
        ".snow-price_SnowPrice__mainM__jo8n2",
        ".snow-price_SnowPrice__main__1pOJ_",
        ".product-price-current",
        "[data-product-price]",
        ".price--current",
        ".uniform-banner-box-price",
        // –°—Ç–∞—Ä—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏
        ".product-price-value",
        ".product-price",
        ".p-price",
        ".price",
      ];

      let price = "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ";
      let priceElement = null;

      for (const selector of priceSelectors) {
        const elements = document.querySelectorAll(selector);
        console.log(
          `–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ ${selector}: –∑–Ω–∞–π–¥–µ–Ω–æ ${elements.length} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤`
        );

        for (const element of elements) {
          if (element && element.textContent) {
            const text = element.textContent.trim();
            console.log(`–¢–µ–∫—Å—Ç –µ–ª–µ–º–µ–Ω—Ç–∞: "${text}"`);

            // –®—É–∫–∞—î–º–æ —Ü—ñ–Ω—É –≤ —Ç–µ–∫—Å—Ç—ñ
            const priceMatch = text.match(/([¬£$‚Ç¨‚Ç¥]?\s*\d+[.,]\d+)/);
            if (priceMatch && text.length < 100) {
              // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –¥–æ–≤–≥—ñ —Ç–µ–∫—Å—Ç–∏
              price = text;
              priceElement = element;
              console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ü—ñ–Ω—É: ${price}`);
              break;
            }
          }
        }
        if (price !== "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ") break;
      }

      // –ú–ï–¢–û–î 2: –ü–æ—à—É–∫ –±—É–¥—å-—è–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É –∑ —Ü—ñ–Ω–æ—é –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
      if (price === "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ") {
        console.log("üîç –°–ø—Ä–æ–±–∞ –ø–æ—à—É–∫—É —Ü—ñ–Ω–∏ –≤ —É—Å—å–æ–º—É DOM...");
        const allElements = document.querySelectorAll("*");
        for (const element of allElements) {
          if (element.textContent && element.textContent.length < 50) {
            const text = element.textContent.trim();
            const priceMatch = text.match(/([¬£$‚Ç¨‚Ç¥]?\s*\d+[.,]\d+\s*[¬£$‚Ç¨‚Ç¥]?)/);
            if (
              priceMatch &&
              !text.includes("cookie") &&
              !text.includes("Security")
            ) {
              price = text;
              console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ü—ñ–Ω—É –≤ DOM: ${price}`);
              break;
            }
          }
        }
      }

      // –ú–ï–¢–û–î 3: –ü–æ—à—É–∫ –≤ meta-—Ç–µ–≥–∞—Ö
      if (price === "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ") {
        const metaPrice = document.querySelector(
          'meta[property="product:price"]'
        );
        if (metaPrice) {
          price = metaPrice.getAttribute("content");
          console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ü—ñ–Ω—É –≤ meta: ${price}`);
        }
      }

      // –ü–æ—à—É–∫ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
      let imageUrl = "";
      const imageSelectors = [
        ".magnifier-image",
        ".main-image img",
        ".gallery-image img",
        'img[src*="jpg"], img[src*="png"], img[src*="jpeg"]',
      ];

      for (const selector of imageSelectors) {
        const element = document.querySelector(selector);
        if (element && element.src) {
          imageUrl = element.src;
          if (imageUrl.startsWith("//")) {
            imageUrl = "https:" + imageUrl;
          }
          break;
        }
      }

      console.log(price);

      return {
        price: price,
        imageUrl: imageUrl,
        title: document.title,
        url: window.location.href,
      };
    });

    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥—É: ${aliData.price}`);
    await page.close();

    return aliData.price !== "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ" ? aliData : null;
  } catch (error) {
    console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É: ${error.message}`);
    await page.close();
    return null;
  }
}
